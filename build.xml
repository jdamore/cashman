<project name="Cashman ANT Build Script" basedir="." default="all">

    <!-- =================================================================== -->
    <!-- Properties                                                          -->
    <!-- =================================================================== -->
    <property file="build.properties"/>

    <!-- =================================================================== -->
    <!-- Application Classes and Libraries Paths                             -->
    <!-- =================================================================== -->
    <path id="cashman.src.path">
        <path location="${cashman.src}"/>
    </path>

    <path id="cashman.cls.path">
        <path location="${cashman.dist}/cashman/WEB-INF/classes"/>
    </path>

    <path id="cashman.lib.path">
        <fileset dir="${cashman.lib}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="cashman.path">
        <path location="${cashman.dist}/cashman/WEB-INF/classes"/>
        <fileset dir="${cashman.lib}">
            <include name="**/*.jar"/>
        </fileset>
    </path>


    <!-- =================================================================== -->
    <!-- reate required distribution directories                             -->
    <!-- =================================================================== -->
    <target name="prepare">
        <mkdir dir="${cashman.dist}/cashman/WEB-INF"/>
        <mkdir dir="${cashman.dist}/cashman/WEB-INF/classes"/>
        <!--<mkdir dir="${cashman.dist}/cashman/WEB-INF/classes_test"/>-->
        <!--<mkdir dir="${cashman.dist}/cashman/WEB-INF/classes_sel"/>-->
        <mkdir dir="${cashman.dist}/cashman/WEB-INF/lib"/>
        <mkdir dir="${cashman.dist}/cashman/jsp"/>
        <mkdir dir="${cashman.dist}/cashman/css"/>
    </target>

    <!-- =================================================================== -->
    <!-- Clean Target                                                         -->
    <!-- =================================================================== -->
    <target name="clean" description="Clean executable and distribution">
        <delete file="${cashman.dist}/cashman.war"/>
        <delete dir="${cashman.dist}/cashman"/>
        <delete dir="${cashman.doc}"/>
        <delete dir="${basedir}">
            <include name="./**/*.emma" />
        </delete>
    </target>

    <!-- =================================================================== -->
    <!-- All Targets                                                        -->
    <!-- =================================================================== -->
    <target name="all" description="Default Target">
        <antcall target="clean" />
        <antcall target="build" />
        <antcall target="utest" />
        <antcall target="itest" />
        <!--<antcall target="ftest" />-->
        <antcall target="javadoc" />
    </target>

    <!-- =================================================================== -->
    <!-- Build Target                                                         -->
    <!-- =================================================================== -->
    <target name="build" description="Main Build Target">
        <antcall target="clean" />
        <antcall target="prepare" />
        <antcall target="compile" />
        <antcall target="instrument" />
        <antcall target="dist" />
    </target>

    <!-- =================================================================== -->
    <!-- Dist Target                                                         -->
    <!-- =================================================================== -->
    <target name="ftest-dist">
        <antcall target="copy-web-config" />
        <antcall target="copy-struts-config" />
        <antcall target="copy-spring-config" />
        <antcall target="copy-tlds" />
        <antcall target="copy-jsp" />
        <antcall target="copy-css" />
        <antcall target="copy-jetty-startup" />
    </target>

    <!-- =================================================================== -->
    <!-- Dist Target                                                         -->
    <!-- =================================================================== -->
    <target name="dist" description="Main Build Target">
        <antcall target="copy-web-config" />
        <antcall target="copy-struts-config" />
        <antcall target="copy-spring-config" />
        <antcall target="copy-lib" />
        <antcall target="copy-tlds" />
        <antcall target="copy-jsp" />
        <antcall target="copy-css" />
        <antcall target="copy-jetty-startup" />
        <antcall target="package" />
    </target>

    <!-- =================================================================== -->
    <!-- Rebuild & Deploy Target                                             -->
    <!-- =================================================================== -->
    <target name="cd" description="Rebuild and Deploy Target">
        <antcall target="clean" />
        <antcall target="build" />
        <antcall target="dist" />
        <antcall target="tomcat-restart" />
    </target>

    <!--=================================================================== -->
    <!--Compile all Java Code                                               -->
    <!--=================================================================== -->
    <target name="compile"  depends="prepare">
        <javac srcdir="${cashman.src}"
            destdir="${cashman.cls}"
            debug="on"
            deprecation="on"
            optimize="on">
            <classpath refid="cashman.lib.path"/>
        </javac>
    </target>



    <!-- =================================================================== -->
    <!-- Copy web.xml to distribution                                        -->
    <!-- =================================================================== -->
    <target name="copy-web-config" depends="prepare">
        <copy toDir="${cashman.dist}/cashman/WEB-INF" flatten="true">
            <fileset dir="${cashman.src}">
                <include name="**/web.xml"/>
            </fileset>
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Copy Struts XML config files to distribution                        -->
    <!-- =================================================================== -->
    <target name="copy-struts-config" depends="prepare">
        <copy toDir="${cashman.cls}" flatten="true">
            <fileset dir="${cashman.src}">
                <include name="**/*struts*.xml"/>
            </fileset>
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Copy Spring config files to distribution                            -->
    <!-- =================================================================== -->
    <target name="copy-spring-config" depends="prepare">
        <copy toDir="${cashman.cls}" flatten="true">
            <fileset dir="${cashman.home}">
                <include name="config/${cashman.env}/spring-*.xml"/>
            </fileset>
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Copy Spring config files for integration testing to classpath       -->
    <!-- =================================================================== -->
    <target name="itest-copy-spring-config" depends="prepare">
        <copy toDir="${cashman.cls}" flatten="true">
            <fileset dir="${cashman.home}">
                <include name="config/test/spring-*.xml"/>
            </fileset>
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Copy application libraries to distribution                          -->
    <!-- =================================================================== -->
    <target name="copy-lib" depends="prepare">
        <copy toDir="${cashman.dist}/cashman/WEB-INF/lib" flatten="true">
            <fileset dir="${cashman.lib}">
                <include name="**/*.jar"/>
                <exclude name="cobertura/*" />
                <exclude name="emma/*" />
                <exclude name="jbehave/*" />
                <exclude name="junit/*" />
                <exclude name="selenium/*" />
            </fileset>
        </copy>
    </target>


    <target name="copy-tlds" depends="prepare">
        <copy toDir="${cashman.dist}/cashman/WEB-INF/lib/tld" flatten="true">
            <fileset dir="${cashman.lib}">
                <include name="**/*.tld"/>
            </fileset>
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Copy JSPs to distribution                                           -->
    <!-- =================================================================== -->
    <target name="copy-jsp" depends="prepare">
        <copy toDir="${cashman.dist}/cashman/jsp" flatten="true">
            <fileset dir="${cashman.src}">
                <include name="**/*.jsp"/>
            </fileset>
        </copy>
        <copy toDir="${cashman.dist}/cashman" flatten="true">
            <fileset dir="${cashman.src}">
                <include name="**/index.jsp"/>
            </fileset>
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Copy Embedded Jetty server startup script                           -->
    <!-- =================================================================== -->
    <target name="copy-jetty-startup" depends="prepare">
        <copy toDir="${cashman.dist}" flatten="true">
            <fileset dir="${cashman.src}">
                <include name="**/start-jetty-server.sh"/>
            </fileset>
        </copy>
    </target>


    <!-- =================================================================== -->
    <!-- Copy CSSs to distribution                                           -->
    <!-- =================================================================== -->
    <target name="copy-css" depends="prepare">
        <copy toDir="${cashman.dist}/cashman/css" flatten="true">
            <fileset dir="${cashman.src}">
                <include name="**/*.css"/>
            </fileset>
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Copy JBehave Stories                                                -->
    <!-- =================================================================== -->
    <target name="copy-stories" depends="prepare">
        <copy toDir="${cashman.dist}/cashman/WEB-INF/classes" flatten="false">
            <fileset dir="${cashman.ftest}">
                <include name="**/*.story"/>
            </fileset>
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Create cashman.war                                                  -->
    <!-- =================================================================== -->
    <target name="package" depends="prepare">
        <echo message="Will create archive ${build.id}_cashman.war" />
        <echo file="${cashman.cls}/build.properties">build.id=${build.id}</echo>
         <jar destfile="${cashman.dist}/${build.id}_cashman.war"
             basedir="${cashman.dist}/cashman"
             includes="**/*">
        </jar>
    </target>

    <!--===================================================================-->
    <!-- Create Java docs and Zip it                                       -->
    <!--===================================================================-->
    <target name="javadoc" depends="prepare">
        <javadoc
                destdir="${cashman.doc}/javadoc"
                author="true"
                version="true"
                use="true"
                windowtitle="Cashman Javadoc"
                sourcepathref="cashman.src.path"
                overview="true"
                verbose="true">
            <doctitle><![CDATA[<h1>Cashman Javadoc</h1>]]></doctitle>
            <bottom><![CDATA[<i>Copyright &#169; 2011 JR D'Amore. All Rights Reserved.</i>]]></bottom>
            <classpath>
                <path refid="cashman.lib.path"/>
            </classpath>
        </javadoc>
    </target>

    <!--=================================================================== -->
    <!-- Compile Unit Tests                                                 -->
    <!--=================================================================== -->
    <target name="utest-compile" depends="compile, copy-spring-config">
        <javac srcdir="${cashman.utest}"
            destdir="${cashman.cls}"
            debug="on"
            deprecation="on"
            optimize="on">
            <classpath refid="cashman.lib.path"/>
            <classpath refid="cashman.cls.path"/>
        </javac>
    </target>

    <!--=================================================================== -->
    <!-- Compile Intg Tests                                                 -->
    <!--=================================================================== -->
    <target name="itest-compile" depends="compile">
        <javac srcdir="${cashman.itest}"
            destdir="${cashman.cls}"
            debug="on"
            deprecation="on"
            optimize="on">
            <classpath refid="cashman.lib.path"/>
            <classpath refid="cashman.cls.path"/>
        </javac>
        <copy toDir="${cashman.cls}" flatten="false">
            <fileset dir="${cashman.itest}">
                <include name="*/**/spring-fixtures-*.xml"/>
            </fileset>
        </copy>
    </target>

    <!--=================================================================== -->
    <!-- Compile Jbehave Tests                                                 -->
    <!--=================================================================== -->
    <target name="ftest-compile" depends="compile, copy-stories">
        <javac srcdir="${cashman.ftest}"
            destdir="${cashman.cls}"
            debug="on"
            deprecation="on"
            optimize="on">
            <classpath refid="cashman.lib.path"/>
            <classpath refid="cashman.cls.path"/>
        </javac>
    </target>

    <!--=================================================================== -->
    <!-- Instrument source code for Emma code coverage                      -->
    <!--=================================================================== -->
    <taskdef resource="emma_ant.properties" classpathref="cashman.lib.path" />
    <target name="instrument">
        <emma>
            <instr instrpathref="cashman.cls.path"
                   destdir="${cashman.cls_i}"
                   metadatafile="${basedir}/metadata.emma"
                   merge="true" />
        </emma>
    </target>


    <!--=================================================================== -->
    <!-- Run JUnit Unit Tests                                               -->
    <!-- Execute Unit Tests with Tomcat running against instrumented classes  -->
    <!-- Create Unit Tests and Emma code coverage reports                   -->
    <!--=================================================================== -->
    <target name="utest" description="Run Unit Tests">
            <antcall target="utest-run" />
            <antcall target="utest-report" />
    </target>

    <target name="utest-run" depends="utest-compile, instrument">
         <mkdir dir="${cashman.doc}/utest"/>
         <junit fork="yes" dir="${cashman.cls}" printsummary="true" haltonfailure="false">
            <batchtest todir="${cashman.doc}/utest">
                <fileset dir="${cashman.cls}" includes="test/**/Test*.class" />
                <formatter type="xml"/>
            </batchtest>
            <classpath>
                <path refid="cashman.lib.path" />
                <pathelement location="${cashman.cls_i}" />
                <path refid="cashman.cls.path" />
            </classpath>
            <jvmarg value="-Demma.coverage.out.file=${basedir}/junit.emma" />
            <jvmarg value="-Demma.coverage.out.merge=true" />
        </junit>
    </target>

    <target name="utest-report">
        <junitreport todir="${cashman.doc}/utest">
            <fileset dir="${cashman.doc}/utest"/>
            <report todir="${cashman.doc}/utest"/>
        </junitreport>
        <mkdir dir="${cashman.doc}/emma-junit"/>
        <emma>
            <report sourcepath="${cashman.src}" >
                <fileset dir="${basedir}" >
                    <include name="metadata.emma" />
                    <include name="junit.emma" />
                </fileset>
                <xml outfile="${cashman.doc}/emma-junit/coverage.xml" />
                <!--<txt outfile="${cashman.doc}/emma-junit/coverage.txt" />-->
                <!--<html outfile="${cashman.doc}/emma-junit/coverage.html" />-->
            </report>
        </emma>
    </target>

    <!--=================================================================== -->
    <!-- Run JUnit INTG Tests                                               -->
    <!-- Execute Unit Tests with Tomcat running against instrumented classes  -->
    <!-- Create Unit Tests and Emma code coverage reports                   -->
    <!--=================================================================== -->
    <target name="itest" description="Run Intg Tests">
            <antcall target="itest-run" />
            <antcall target="itest-report" />
    </target>

    <target name="itest-run" depends="itest-compile, itest-copy-spring-config">
         <mkdir dir="${cashman.doc}/itest"/>
         <junit fork="yes" dir="${cashman.cls}" printsummary="true" haltonfailure="false">
            <batchtest todir="${cashman.doc}/itest">
                <fileset dir="${cashman.cls}">
                    <include name="test/**/iTest*.class" />
                    <exclude name="test/**/iTestBase.class"/>
                    <exclude name="test/**/iTestDAO.class"/>
                </fileset>
                <formatter type="xml"/>
            </batchtest>
            <classpath>
                <path refid="cashman.lib.path" />
                <path refid="cashman.cls.path" />
            </classpath>
        </junit>
    </target>

    <target name="itest-report">
        <junitreport todir="${cashman.doc}/itest">
            <fileset dir="${cashman.doc}/itest"/>
            <report todir="${cashman.doc}/itest"/>
        </junitreport>
    </target>


    <!--=================================================================== -->
    <!-- Run JUnit JBehave Tests                                            -->
    <!--=================================================================== -->
    <target name="ftest" description="Run JUnit JBehave Tests">
        <antcall target="ftest-run"/>
        <antcall target="ftest-report" />
    </target>

    <target name="ftest-prepare">
        <antcall target="ftest-compile"/>
        <antcall target="ftest-dist" />

    </target>


    <target name="ftest-run" depends="ftest-prepare">
        <mkdir dir="${cashman.doc}/ftest"/>
        <junit fork="yes" printsummary="true" haltonfailure="false">
            <batchtest>
                <fileset dir="${cashman.cls}" includes="stories/**/*Story.class" />
            </batchtest>
            <formatter type="xml"/>
            <classpath>
                <path refid="cashman.lib.path" />
                <path refid="cashman.cls.path" />
            </classpath>
        </junit>
    </target>

    <target name="ftest-report">
        <mkdir dir="${cashman.doc}/ftest"/>
        <copy todir="${cashman.doc}/ftest">
            <fileset dir="${cashman.dist}/cashman/WEB-INF/jbehave" >
                <include name="**/*"/>
            </fileset>
        </copy>
        <delete dir="${cashman.dist}/cashman/WEB-INF/jbehave" />
    </target>

    <!--=================================================================== -->
    <!-- Tomcat Stuffs                                                      -->
    <!--=================================================================== -->
    <property name="tomcat.home" value="/Users/jdamore/dev/bin/apache-tomcat-7.0.16" />

    <target name="tomcat-start">
        <java classname="org.apache.catalina.startup.Bootstrap" fork="true" spawn="true">
            <classpath path="${tomcat.home}/bin/bootstrap.jar:${tomcat.home}/bin/tomcat-juli.jar" />
            <jvmarg value="-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager" />
            <jvmarg value="-Djava.util.logging.config.file=${tomcat.home}/conf/logging.properties" />
            <jvmarg value="-Dcatalina.home=${tomcat.home}" />
            <jvmarg value="-Dcatalina.base=${tomcat.home}" />
            <!--<jvmarg value="-Djava.io.tmpdir=${tomcat.home}/temp" />-->
            <jvmarg value="-Demma.coverage.out.file=${basedir}/selenium.emma" />
            <jvmarg value="-Demma.coverage.out.merge=true" />
            <arg line="start" />
        </java>
    </target>


    <!--=================================================================== -->
    <!-- Start/Stop embedded jJtty server                                   -->
    <!--=================================================================== -->
    <target name="jetty-start" depends="copy-jetty-startup">
        <exec executable="/bin/bash" spawn="false">
            <arg value="${cashman.dist}/start-jetty-server.sh"/>
        </exec>
    </target>

    <target name="jetty-stop">
        <exec executable="/bin/bash" spawn="true">
            <arg value="${cashman.dist}/stop-jetty-server.sh"/>
        </exec>
    </target>


    <!--=================================================================== -->
    <!-- Start/Stop local Tomcat server                                   -->
    <!--=================================================================== -->
    <target name="tomcat-stop">
        <exec executable="/bin/bash">
            <arg value="${tomcat.home}/bin/shutdown.sh"/>
        </exec>
    </target>

    <target name="tomcat-restart" description="Restart Tomcat">
        <antcall target="tomcat-stop" />
        <sleep seconds="2" />
        <antcall target="tomcat-start" />
    </target>

    <!--=================================================================== -->
    <!-- Before Unit Tests                                                  -->
    <!--=================================================================== -->
    <target name="copy-fixtures">
        <copy todir="${cashman.cls}" flatten="false">
            <fileset dir="${cashman.utest}" >
                <include name="**/spring-fixtures*.xml" />
            </fileset>
        </copy>
    </target>


</project>

